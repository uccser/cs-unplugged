version: "3.8"

services:
    django:
        build:
            context: .
            dockerfile: ./infrastructure/local/django/Dockerfile
        image: cs_unplugged_local_django
        volumes:
            - ./csunplugged/:/app/:z
        env_file:
            - ./infrastructure/local/django/.envs
            - ./infrastructure/local/postgres/.envs
        command: /start
        networks:
            - uccser-development-stack
            - backend
        labels:
            # General labels
            - "traefik.enable=true"
            - "traefik.docker.network=uccser-development-stack"
            - "traefik.http.services.cs-unplugged-django.loadbalancer.server.port=8000"
            # HTTPS
            - "traefik.http.routers.cs-unplugged-django.entryPoints=web-secure"
            - "traefik.http.routers.cs-unplugged-django.service=cs-unplugged-django"
            - "traefik.http.routers.cs-unplugged-django.rule=Host(`cs-unplugged.localhost`)"
            - "traefik.http.routers.cs-unplugged-django.tls=true"

    # Node server for creating static files
    node:
        build:
            context: .
            dockerfile: ./infrastructure/local/node/Dockerfile
            args:
                DOCKER_UID: ${DOCKER_UID}
        image: cs_unplugged_local_node
        volumes:
            # https://burnedikt.com/dockerized-node-development-and-mounting-node-volumes/#exclude-node_modules-from-the-mount
            - ./csunplugged/package.json:/app/package.json:z
            - ./csunplugged/gulpfile.mjs:/app/gulpfile.mjs:z
            - ./csunplugged/static:/app/static:z
            - ./csunplugged/build:/app/build:z
        command: npm run dev

    postgres:
        image: postgres:13.6
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            start_period: 10s
            interval: 10s
            timeout: 5s
            retries: 3
        env_file:
            - ./infrastructure/local/postgres/.envs
        networks:
            - backend
        volumes:
            - local-postgres-data:/var/lib/postgresql/data:Z
            - local-postgres-data-backups:/backups:z

    jobe:
        image: trampgeek/jobeinabox:latest
        networks:
            - backend

    docs:
        image: ghcr.io/uccser/local-docs-image:latest
        volumes:
            - ./docs:/docs:z
        networks:
            - uccser-development-stack
        labels:
            # General labels
            - "traefik.enable=true"
            - "traefik.http.services.cs-unplugged-docs.loadbalancer.server.port=7000"
            # HTTPS
            - "traefik.http.routers.cs-unplugged-docs.entryPoints=web-secure"
            - "traefik.http.routers.cs-unplugged-docs.service=cs-unplugged-docs"
            - "traefik.http.routers.cs-unplugged-docs.rule=Host(`docs.cs-unplugged.localhost`)"
            - "traefik.http.routers.cs-unplugged-docs.tls=true"

    decktape:
        build:
            context: ./infrastructure/local/decktape/
            dockerfile: Dockerfile
        profiles:
            - slides-pdf-generation
        networks:
            - backend
        volumes:
            - ./csunplugged/build/:/slides
            - ./infrastructure/local/decktape/create-slide-files.js:/decktape/create-slide-files.js:z

networks:
    backend:
        driver: bridge
    uccser-development-stack:
        external: true

volumes:
    local-postgres-data: {}
    local-postgres-data-backups: {}
