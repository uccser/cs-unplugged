name: Test and deploy

on:
  workflow_dispatch:
  push:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-at-a-distance-files:
    name: Create at a distance files
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        language: [
          'en',
        ]
      fail-fast: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Docker network
        run: docker network create uccser-development-proxy

      - name: Start system
        run: docker-compose -f docker-compose.local.yml up -d

      - name: Create production static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" node npm run build

      - name: Collect static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py collectstatic --no-input

      - name: Migrate database
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py migrate

      - name: Load at a distance data
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py load_at_a_distance_data

      - name: Run decktape script
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" decktape --language ${{ matrix.language }}

      - name: Create speaker notes PDFs
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py create_lesson_speaker_notes_pdfs --language ${{ matrix.language }}

      - name: Archive static files
        run: tar czf at-a-distance-files.tar.gz --directory csunplugged/build/slides/ .

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: slide-files-${{ matrix.language }}
          path: slide-files.tar.gz
          retention-days: 3
